-- #### FUNCTIONS ####

-- ## Refueling
function Refuel()
  turtle.select(16)
  turtle.refuel()
end

-- ## Check Fuel Level
function CheckFuel()
  if turtle.getFuelLevel() < 400 then
    Refuel()
  end
end

--## Check the block in front or up for matches with the object database
function CheckBlock(String, Up)
  if not Up then
    local success, data = turtle.inspect()
    if success then
      if String ~= "" then
        if string.find(data.name, String) then
          return true
        end
      else
        for i = 1, #objectCheckNames do
          if string.find(data.name, objectCheckNames[i]) then
            return true
          end
        end
      end
    end
  else
    local success, data = turtle.inspectUp()
    if success then
      if String ~= "" then
        if string.find(data.name, String) then
          return true
        end
      else
        for i = 1, #objectCheckNames do
          if string.find(data.name, objectCheckNames[i]) then
            return true
          end
        end
      end
    end
  end
  return false
end

-- ## Dig Up
function Up()
  if turtle.detectUp() and not CheckBlock("torch",true)  then
    turtle.digUp()
  end
end

-- ## Dig Forward
function Forward()
  while turtle.detect() do
    turtle.dig()
  end
  turtle.forward()
end

-- ## Dig Block
function DigBlock()
    Forward()
  --for i = 1, height do
    if turtle.detectUp() then
      Up()
      turtle.up()
      Up()
      turtle.down()
    end
end

-- ## Move to the next strip in the 3d area
function NextLine()
  if CurWidth % 2 == 0 then
    turtle.turnRight()
    DigBlock()
    turtle.turnRight()
  else
    turtle.turnLeft()
    DigBlock()
    turtle.turnLeft()
  end
end

-- ## Drop Items In Chest
function DropInChest()
  turtle.forward()
  if turtle.detect() and CheckBlock("chest",false) then
    for i = 1, 13 do
      turtle.select(i)
      turtle.drop()
    end
  else
    print("No chest found!")
  end
  turtle.turnLeft()
  turtle.turnLeft()
end

-- ## Mine the 3D Area
function MineArea(depth,width)
  DigBlock() -- Initial Dig to get into position
  for w = 1, width do
    CurWidth = w
    for d = 1, depth - 1 do
      CurDepth = d
      CheckFuel()
      DigBlock()
    end
    if CurWidth ~= width then
      NextLine()
    end
  end
end



function MoveToOrigin()
  turtle.turnRight()
  for i = 1, CurWidth-1 do
    turtle.forward()
  end
  turtle.turnRight()
  for i = 1, CurDepth do
    turtle.forward()
  end
end



-- #### END OF FUNCTIONS ####

turtle.select(16)
--  This turtle program is designed to mine a 3D area of blocks

print("Insert fuel into slot 16")
print("Place Chest behind the turtle!")
print("-----------------------------")

print("Now enter the depth to be mined")
depth = tonumber(read()) or 0
print("Now enter the length to be mined")
width = tonumber(read()) or 0
--print("Now enter the height to be mined")
--height = tonumber(read()) or 3



local status = "running"
local CurDepth = 0
local CurWidth = 0
local objectCheckNames = {"chest","torch"}




MineArea(depth,width)
MoveToOrigin()
DropInChest()


